@using Pustok_Weekend_Task.Areas.Admin.ViewModels.AdminCommonVM;
@model AdminPaginationVM<IEnumerable<AdminProductListVM>>

@* @{
    async void CallPage(int page)
    { 
        @await Component.InvokeAsync("ProductsTable", new{page = page})
    }
} *@

<div class="table-responsive">
    <div class="row">
        <div class="col-sm-9">
            <a class="btn btn-outline-success" asp-action="Create" asp-controller="AdminProduct">Create</a>
        </div>
        <div class="col-sm-3">
            @* <label style="white-space:nowrap">
                Show
                <select name="dataTable_length" aria-controls="dataTable" class="custom-select custom-select-sm form-control form-control-sm">
                    <option value="10">10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                </select> entries
            </label> *@
        </div>
    </div>
    <div class="row">
        <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Active Image</th>
                    <th>ExTax</th>
                    <th>Is Available</th>
                    <th>Actual Price</th>
                    <th>Sell Price</th>
                    <th>Discount</th>
                    <th>Category</th>
                    <th>Author</th>
                    <th colspan="2" style="text-align: center">Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Items.Count() != 0)
                {
                    @foreach (var product in Model.Items)
                    {
                        <tr class='@(product.IsDeleted ? "bg-danger text-white" : "")'>
                            <td>@product.Id</td>
                            <td>@product.Name</td>
                            <td>
                               @*  <a data-toggle="popover-hover" data-img="@product.ActiveImageUrl">Show</a> *@
                                <img src="@product.ActiveImageUrl" width="100" height="100" />
                            </td>
                            <td>@product.ExTax</td>
                            <td>@(product.IsAvailable == true ? "yes" : "no")</td>
                            <td>@product.ActualPrice</td>
                            <td>@product.SellPrice</td>
                            <td>@product.Discount</td>
                            <td>@product.CategoryName</td>
                            <td>@product.AuthorFullName</td>
                            <td><a class="btn btn-outline-info" asp-action="Update" asp-controller="AdminProduct" asp-route-id="@product.Id">Update</a></td>
                            <td><a class="btn btn-outline-danger" asp-action="Delete" asp-controller="AdminProduct" asp-route-id="@product.Id">Delete</a></td>
                        </tr>
                    }
                }
                else
                {
                    <tr align="center">
                        <td colspan="11">NO DATA</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="row">
        <div class="col-sm-9">
            <div class="dataTables_info" id="dataTable_info" role="status" aria-live="polite">
                Showing @Model.FirstOnPage to @Model.LastOnPage of @Model.TotalCount entries
            </div>
        </div>
        <div class="col-sm-3">
            <div class="dataTables_paginate paging_simple_numbers" id="dataTable_paginate">
                <ul id="prod-pag" class="pagination">
                    <li class="page-item  @(Model.HasPrev ? "" : "disabled")"><a class='page-link' asp-action="GetMyViewComponent" asp-route-calledPage="@(Model.CurrentPage - 1)">Previous</a></li>
                    @for (int i = 1; i <= Model.LastPage; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")"><a class="page-link" asp-action="GetMyViewComponent" asp-route-calledPage="@i">@i</a></li>
                    }
                    <li class="page-item @(Model.HasNext ? "" : "disabled")"><a class="page-link" asp-action="GetMyViewComponent" asp-route-calledPage="@(Model.CurrentPage + 1)">Next</a></li>
                </ul>
            </div>
        </div>
    </div>
</div>